{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Initial state for the cart slice\nconst initialState = {\n  products: []\n};\n\n// Create a cart slice using createSlice\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  // Name of the slice\n  initialState,\n  // Initial state defined above\n  reducers: {\n    // Reducer to add items to the cart\n    addToCart: (state, action) => {\n      // Check if the item is already in the cart\n      const item = state.products.find(item => item.id === action.payload.id);\n      if (item) {\n        // If the item is already in the cart, update the quantity\n        item.quantity += action.payload.quantity;\n      } else {\n        // If the item is not in the cart, add it\n        state.products.push(action.payload);\n      }\n    },\n    // Reducer to remove an item from the cart\n    removeItem: (state, action) => {\n      // Filter out the item with the specified ID\n      state.products = state.products.filter(item => item.id !== action.payload);\n    },\n    // Reducer to reset the cart to an empty state\n    resetCart: state => {\n      state.products = [];\n    }\n  }\n});\n\n// Export individual action creators generated by createSlice\nexport const {\n  addToCart,\n  removeItem,\n  resetCart\n} = cartSlice.actions;\n\n// Export the reducer function generated by createSlice\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","cartSlice","name","reducers","addToCart","state","action","item","find","id","payload","quantity","push","removeItem","filter","resetCart","actions","reducer"],"sources":["C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/client/src/redux/cartReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Initial state for the cart slice\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\n// Create a cart slice using createSlice\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\", // Name of the slice\r\n  initialState, // Initial state defined above\r\n  reducers: {\r\n    // Reducer to add items to the cart\r\n    addToCart: (state, action) => {\r\n      // Check if the item is already in the cart\r\n      const item = state.products.find((item) => item.id === action.payload.id);\r\n      if (item) {\r\n        // If the item is already in the cart, update the quantity\r\n        item.quantity += action.payload.quantity;\r\n      } else {\r\n        // If the item is not in the cart, add it\r\n        state.products.push(action.payload);\r\n      }\r\n    },\r\n    // Reducer to remove an item from the cart\r\n    removeItem: (state, action) => {\r\n      // Filter out the item with the specified ID\r\n      state.products = state.products.filter(item => item.id !== action.payload);\r\n    },\r\n    // Reducer to reset the cart to an empty state\r\n    resetCart: (state) => {\r\n      state.products = [];\r\n    },\r\n  },\r\n});\r\n\r\n// Export individual action creators generated by createSlice\r\nexport const { addToCart, removeItem, resetCart } = cartSlice.actions;\r\n\r\n// Export the reducer function generated by createSlice\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EAAE;EACdH,YAAY;EAAE;EACdI,QAAQ,EAAE;IACR;IACAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B;MACA,MAAMC,IAAI,GAAGF,KAAK,CAACL,QAAQ,CAACQ,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC;MACzE,IAAIF,IAAI,EAAE;QACR;QACAA,IAAI,CAACI,QAAQ,IAAIL,MAAM,CAACI,OAAO,CAACC,QAAQ;MAC1C,CAAC,MAAM;QACL;QACAN,KAAK,CAACL,QAAQ,CAACY,IAAI,CAACN,MAAM,CAACI,OAAO,CAAC;MACrC;IACF,CAAC;IACD;IACAG,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7B;MACAD,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACc,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAAC;IAC5E,CAAC;IACD;IACAK,SAAS,EAAGV,KAAK,IAAK;MACpBA,KAAK,CAACL,QAAQ,GAAG,EAAE;IACrB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEI,SAAS;EAAES,UAAU;EAAEE;AAAU,CAAC,GAAGd,SAAS,CAACe,OAAO;;AAErE;AACA,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}